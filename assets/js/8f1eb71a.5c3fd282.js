"use strict";(self.webpackChunk_git_filesystem_website=self.webpackChunk_git_filesystem_website||[]).push([[47],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>y});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=o.createContext({}),l=function(e){var t=o.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(r),y=n,m=u["".concat(p,".").concat(y)]||u[y]||d[y]||i;return r?o.createElement(m,a(a({ref:t},c),{},{components:r})):o.createElement(m,a({ref:t},c))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8180:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=r(7462),n=(r(7294),r(3905));const i={title:"Client",sidebar_position:2},a=void 0,s={unversionedId:"typescript/usage/client",id:"typescript/usage/client",title:"Client",description:"Once you have a client from a client factory,",source:"@site/docs/typescript/usage/client.mdx",sourceDirName:"typescript/usage",slug:"/typescript/usage/client",permalink:"/docs/typescript/usage/client",draft:!1,editUrl:"https://github.com/git-filesystem/git-filesystem/tree/main/docs/typescript/usage/client.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Client",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Client Factory",permalink:"/docs/typescript/usage/client-factory"},next:{title:"Repository",permalink:"/docs/typescript/usage/repository"}},p={},l=[{value:"<code>createRepository()</code>",id:"createrepository",level:3},{value:"<code>getAllRepositories()</code>",id:"getallrepositories",level:3},{value:"<code>getRepository()</code>",id:"getrepository",level:3},{value:"<code>getReadOnlyRepository()</code>",id:"getreadonlyrepository",level:3},{value:"<code>deleteRepository()</code>",id:"deleterepository",level:3},{value:"<code>doesRepositoryExist()</code>",id:"doesrepositoryexist",level:3}],c={toc:l};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Once you have a client from a ",(0,n.kt)("a",{parentName:"p",href:"./client-factory"},"client factory"),",\nyou can query the provider/user combination for repositories they have access to."),(0,n.kt)("h3",{id:"createrepository"},(0,n.kt)("inlineCode",{parentName:"h3"},"createRepository()")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"createRepository")," method has the following TypeScript signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"createRepository(name: string, isPrivate: boolean, description: string): Promise<Repository>;\n")),(0,n.kt)("p",null,"How and where the description is used varies between providers."),(0,n.kt)("h3",{id:"getallrepositories"},(0,n.kt)("inlineCode",{parentName:"h3"},"getAllRepositories()")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"getAllRepositories")," method returns a list of repositories that the previously supplied access token can access."),(0,n.kt)("p",null,"Note that sorting and the maximum number of results may vary between providers.\nFor example, the GitHub implementation is limited to 100 repositories and is sorted by how recently the repositories have been pushed to."),(0,n.kt)("h3",{id:"getrepository"},(0,n.kt)("inlineCode",{parentName:"h3"},"getRepository()")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"getRepository")," method returns a ",(0,n.kt)("a",{parentName:"p",href:"./repository"},(0,n.kt)("inlineCode",{parentName:"a"},"Repository"))," instance that can be used to read & write to the files and tags within it."),(0,n.kt)("p",null,"This method has the following two TypeScript signatures:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getRepository(name: string): Repository;\ngetRepository(name: string, owner: string): Repository;\n")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"When using the ",(0,n.kt)("inlineCode",{parentName:"p"},"owner")," parameter it's important to remember that the previously supplied access token needs to at least have read permissions for the repository.")),(0,n.kt)("h3",{id:"getreadonlyrepository"},(0,n.kt)("inlineCode",{parentName:"h3"},"getReadOnlyRepository()")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"getReadOnlyRepository")," method functions exactly the same as the ",(0,n.kt)("a",{parentName:"p",href:"#getRepository"},(0,n.kt)("inlineCode",{parentName:"a"},"getRepository"))," method above,\nhowever the returned type only allows you to read files from either the HEAD or from a tag.\nThis is useful when you know you're dealing with an immuatable repository, for instance repositories on GitHub that are archived."),(0,n.kt)("p",null,"This method has the following two TypeScript signatures:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"getReadonlyRepository(name: string): ReadonlyRepository;\ngetReadonlyRepository(name: string, owner: string): ReadonlyRepository;\n")),(0,n.kt)("p",null,"You can pass in a value for the ",(0,n.kt)("inlineCode",{parentName:"p"},"owner")," parameter to get a repository that belongs to a different account or organisation."),(0,n.kt)("h3",{id:"deleterepository"},(0,n.kt)("inlineCode",{parentName:"h3"},"deleteRepository()")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"deleteRepository")," method can be used to ",(0,n.kt)("strong",{parentName:"p"},"permanently")," delete a repository and all of the content within it."),(0,n.kt)("p",null,"It has the following TypeScript sigature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"deleteRepository(name: string): Promise<void>;\n")),(0,n.kt)("admonition",{type:"danger"},(0,n.kt)("p",{parentName:"admonition"},"Be careful with this method, calling it will result in the loss of data.")),(0,n.kt)("h3",{id:"doesrepositoryexist"},(0,n.kt)("inlineCode",{parentName:"h3"},"doesRepositoryExist()")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"doesRepositoryExist")," method can be used to check is a repository exists with the given name."),(0,n.kt)("p",null,"This method has the following TypeScript signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"searchRepositoriesByFile(filePath: string, contentSearchString: string): Promise<string[]>;\n")))}d.isMDXComponent=!0}}]);